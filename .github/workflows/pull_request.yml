name: Pull Request Validations

on:
  pull_request:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ARTIFACT_NAME: webapp_v1
      CODE_DEPLOY_APPLICATION_NAME: csye6225-webapp
      CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # - name: Run Unit Tests
      #   run: mvn test

      - name: Build with maven
        run: mvn clean package
      
      - name: Build code deployment Artifact
        run:  |
          mkdir codedeploy_artifact
          zip -r ${{env.ARTIFACT_NAME}} target/webapp-0.0.1-SNAPSHOT.jar codedeploy/*.sh appspec.yml webapp.service webapp_cloudwatch_config.json
          mv "${{env.ARTIFACT_NAME}}.zip" codedeploy_artifact/

      - name: Configure AWS Credentials
        run:  |
          aws --version
          aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
          aws configure set aws_secret_access_key ${{secrets.AWS_ACCESS_KEY}}
          aws configure set default.region ${{env.AWS_REGION}}

      - name: Copy Artifact to S3
        run:  aws s3 sync ./codedeploy_artifact s3://${{secrets.AWS_S3_ARTIFACT_BUCKET_NAME}}
      
      - name: CodeDeploy API Call
        run: |
              output=$(aws deploy create-deployment --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME}} --description "CSYE6225 - CodeDeploy" --s3-location bucket=${{secrets.AWS_S3_ARTIFACT_BUCKET_NAME}},key="${{env.ARTIFACT_NAME}}.zip",bundleType=zip --region ${{env.AWS_REGION}} --output json)

              echo $output

              dID=$(echo $output | jq -r '.deploymentId')

              aws deploy wait deployment-successful --deployment-id $dID

# jobs:
#   validate:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#       - name: Run Unit Tests
#         run: mvn test
